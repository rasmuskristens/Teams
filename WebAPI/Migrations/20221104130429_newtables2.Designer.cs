// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Model;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221104130429_newtables2")]
    partial class newtables2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Properties.JoinTeamRequestProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Approved")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateRequested")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<bool>("Reviewed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReviewedDate")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamMembershipId")
                        .HasColumnType("int");

                    b.Property<int>("UserProperty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserProperty");

                    b.ToTable("JoinTeamRequest");
                });

            modelBuilder.Entity("Properties.RoleProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Properties.TeamMembershipProperty", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentProperty")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.HasKey("UserId", "TeamId");

                    b.HasIndex("DepartmentProperty");

                    b.ToTable("Team_Membership");
                });

            modelBuilder.Entity("Properties.TeamProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DepartmentID")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Properties.UserProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("isAdministrator")
                        .HasMaxLength(50)
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Properties.JoinTeamRequestProperty", b =>
                {
                    b.HasOne("Properties.UserProperty", "ReviewedBy")
                        .WithMany()
                        .HasForeignKey("UserProperty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewedBy");
                });

            modelBuilder.Entity("Properties.TeamMembershipProperty", b =>
                {
                    b.HasOne("Properties.TeamProperty", null)
                        .WithMany("TeamMembershipProperties")
                        .HasForeignKey("DepartmentProperty");
                });

            modelBuilder.Entity("Properties.TeamProperty", b =>
                {
                    b.Navigation("TeamMembershipProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
